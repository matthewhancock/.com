using System;
using System.Threading.Tasks;
using Microsoft.AspNet.Builder;
using Microsoft.AspNet.Http;
using System.Text;
using System.Collections.Generic;
using mh.Util;
using mh.Util.Html.Head;

namespace mh
{
    public class Startup
    {
        public void Configure(IApplicationBuilder app)
        {
            app.Run(ProcessRequestAsync);
        }

        private string _css = null;
        private Dictionary<string, byte[]> _images = new Dictionary<string, byte[]>();
        private Dictionary<string, byte[]> _fonts = new Dictionary<string, byte[]>();
        private async Task ProcessRequestAsync(HttpContext context)
        {
            var path = context.Request.Path.ToString();
            path = (path == "" || path == "/") ? null : path.Substring(1);

            if (path != null && path.StartsWith("css"))
            {
                string[] cacheControl = { "public", "max-age=31557600" }; // 365.25 * 24 * 60 * 60 - one year in seconds
                context.Response.Headers.Add("Cache-Control", cacheControl);
                context.Response.ContentType = "text/css";

                if (_css == null)
                {
                    _css = await Util.File.LoadToString("_css/this.css");
                }
                await context.Response.WriteAsync(_css);
            }
            else if (path != null && path.StartsWith("fonts/"))
            {
                byte[] file = null;
                if (_fonts.ContainsKey(path))
                {
                    file = _fonts[path];
                }
                else
                {
                    try
                    {
                        file = await Util.File.LoadToBuffer("_" + path);
                        _fonts.Add(path, file);
                    }
                    catch { }
                }
                if (file != null)
                {
                    string[] cacheControl = { "public", "max-age=31557600" }; // 365.25 * 24 * 60 * 60 - one year in seconds
                    context.Response.Headers.Add("Cache-Control", cacheControl);
                    if (path.EndsWith(".css"))
                    {
                        context.Response.ContentType = "text/css";
                    }
                    else if (path.EndsWith(".eot"))
                    {
                        context.Response.ContentType = "application/vnd.ms-fontobject";
                    }
                    await context.Response.Body.WriteAsync(file, 0, file.Length);
                }
                else
                {
                    context.Response.StatusCode = 404;
                    await context.Response.WriteAsync("File Not Found");
                }
            }
            else if (path != null && path.StartsWith("images/"))
            {
                byte[] file = null;
                if (_images.ContainsKey(path))
                {
                    file = _images[path];
                }
                else
                {
                    try
                    {
                        file = await Util.File.LoadToBuffer("_" + path);
                        _images.Add(path, file);
                    }
                    catch { }
                }
                if (file != null)
                {
                    string[] cacheControl = { "public", "max-age=31557600" }; // 365.25 * 24 * 60 * 60 - one year in seconds
                    context.Response.Headers.Add("Cache-Control", cacheControl);
                    if (path.EndsWith(".jpg"))
                    {
                        context.Response.ContentType = "image/jpeg";
                    }
                    await context.Response.Body.WriteAsync(file, 0, file.Length);
                }
                else
                {
                    context.Response.StatusCode = 404;
                    await context.Response.WriteAsync("File Not Found");
                }
            }
            else
            {
                context.Response.ContentType = "text/html";
                Blog b = null;
                if (path != null)
                {
                    foreach (Blog i in Blogs)
                    {
                        if (i.URLPath == path)
                        {
                            b = i;
                            break;
                        }
                    }
                }

                var tags = new List<Tag> { new Tag("link", new Dictionary<string, string> { { "rel", "stylesheet" }, { "type", "text/css" }, { "href", "/css" }  }),
                    new Tag("link", new Dictionary<string, string> { { "rel", "stylesheet" }, { "type", "text/css" }, { "href", "//cloud.typography.com/607958/790582/css/fonts.css" }  }),
                    new Tag.Javascript("//platform.twitter.com/widgets.js")};
                var body = new StringBuilder();
                if (b != null)
                {
                    tags.Add(new Tag("meta", new Dictionary<string, string> { { "name", "twitter:card" }, { "content", "summary" } }));
                    tags.Add(new Tag("meta", new Dictionary<string, string> { { "name", "twitter:image:src" }, { "content", "http://matthewhancock.com/images/_external/graph.jpg" } }));
                    tags.Add(new Tag("meta", new Dictionary<string, string> { { "name", "twitter:site" }, { "content", "matthewhancock" } }));
                    tags.Add(new Tag("meta", new Dictionary<string, string> { { "name", "twitter:creator" }, { "content", "matthewhancock" } }));
                    tags.Add(new Tag("meta", new Dictionary<string, string> { { "name", "twitter:title" }, { "content", b.Title.Replace("\"", "&quot;") } }));
                    tags.Add(new Tag("meta", new Dictionary<string, string> { { "name", "twitter:description" }, { "content", Text.StripHtml(b.Content.Replace("<br /><br />", " ")).Substring(0, 200).Replace("\"", "&quot;") } }));
                    tags.Add(new Tag("meta", new Dictionary<string, string> { { "name", "description" }, { "content", Text.StripHtml(b.Content.Replace("<br />", "\n")).Substring(0, 500).Replace("\"", "&quot;") } }));

                    var d = b.DateAdded.ToLocalTime();
                    body.Append("<h1 class=\"gray tac\"><a href=\"/\">Matthew Hancock</a></h1>");
                    body.Append("<div class=\"tac style=\"margin:0 0 10px\"><a href=\"https://twitter.com/matthewhancock\" class=\"twitter-follow-button\" data-show-count=\"false\" data-size=\"large\">Follow @matthewhancock</a></div><article id=\"b\"><aside class=\"blog_left\"><div class=\"blog_date\"><div class=\"month\">" + d.ToString("MMMM") + "</div><div class=\"day\">" + d.Day + "</div><div class=\"year\">" + d.Year + "</div><div class=\"time\">" + d.ToString("h:mm tt") + "</div></div></aside><section class=\"blog_container\"><header class=\"blog_title\">" + b.Title + "</header><main class=\"blog_content\">" + b.Content + "</main><footer class=\"blog_footer\">&nbsp;</footer></section></article>");

                    await Html.WriteOutput(context.Response, b.Title + " - Matthew Hancock", tags.ToArray(), body.ToString());
                }
                else
                {
                    tags.Add(new Tag("meta", new Dictionary<string, string> { { "name", "description" }, { "content", "Matthew Hancock" } }));
                    body.Append("<h1 class=\"gray tac\">Matthew Hancock</h1>");
                    body.Append("<div class=\"tac\"><a class=\"twitter-timeline tac\" href=\"https://twitter.com/matthewhancock\" data-widget-id=\"296551452850135041\">Tweets by @matthewhancock</a></div>");
                    var p = Blogs;
                    Array.Sort(p, (p1, p2) => { return p2.DateAdded.CompareTo(p1.DateAdded); });
                    body.Append("<aside style=\"margin:10px auto;\" class=\"tac\"><h2 class=\"gray\">Posts</h2>");
                    foreach (var i in p)
                    {
                        body.Append("<div style=\"font-size:12px;color:#777\">" + i.DateAdded.ToLocalTime().ToString("MMMM d, yyyy h:mm tt") + "</div><div style=\"margin-bottom:5px\"><a href=\"/" + i.URLPath + "\">" + i.Title + "</a></div>");
                    }
                    body.Append("</aside>");
                    await Html.WriteOutput(context.Response, "Matthew Hancock", tags.ToArray(), body.ToString());
                }
            }
        }

        private static Blog[] Blogs = new Blog[] {
            new Blog() {Title = "Casinos in New Hampshire, a Failure of Democracy", URLPath = "Casinos-New-Hampshire-Failure-of-Democracy", DateAdded = new DateTime(2013, 4, 13, 13, 32, 0).ToUniversalTime(), Content = "In <a href=\"http://www.conwaydailysun.com/index.php/rss-feed/96093-gov-040513\" target=\"_blank\">this article in the Conway Daily Sun</a> I was struck by Governor Hassan's response to a question on whether to create a new tax plan rather than depend on gambling revenue. <br /><br />\"I don't want to be at the mercy of Maine and Massachusetts as they open casinos, I would much rather seize the moment.\" <br /><br />Relying on tax revenue from a casino in New Hampshire precisely puts us at the mercy of Maine and Massachusetts. As casinos pop up around us, we're less likely to attract tourists to the state solely from gambling. One potential is that it will create pressure for additional casinos in New Hampshire to siphon people across the border to closer casinos than those in their own state. The second is that the revenue generated from casinos is going to be largely generated from New Hampshire residents. This revenue will not be allocated efficiently from an economic growth standpoint, as despite the casino being described as \"high-end\" the tax distribution is likely to be regressive. <br /><br />\"We have an economy structured around not having an income or sales tax and I think that economy has worked well for us.\"<br /><br />First, arguing the main basis of the status quo is OK while calling for innovation and economic growth is a little ironic. However, this is our fault as a citizenry. This suboptimal policy is of our own making. We force politicians to sign pledges saying they won't implement new taxes. We want lower taxes while maintaining (or expanding) public services. In fact, expanding services is essential to economic growth. Our state has bridges and roads in disrepair, schools that need more funding, health and mental services that were cut by the previous congress, and an underfunded University system (one of the line items Governor Hassan mentioned) that is critical to our state's future economic growth. Spending on these projects is critical to the future prosperity and competitiveness of our state, but no one is willing to spend money on them. The ROI on these investments is greater than from having lower taxes, but that doesn't seem to matter. Strategic spending would create more wealth for us collectively, but the pressure is on short-sighted easy fixes that impact \"others.\"<br /><br />We will likely never generate the revenue needed solely from a casino. From a bargaining standpoint one casino owned by a private business has tremendous bargaining power over the state. Despite being \"highly regulated\" the casino has the upper hand by being an important source of revenue. They'll start lobbying saying their taxes will need to be lowered to remain competitive with casinos in other states. They may even threaten closure to get their way. There is also huge potential for regulatory capture.<br /><br />One principle I've always believed is that the role of government isn't to protect people from themselves. This rule is generally easy to apply, but gambling is a more difficult case to reconcile. People should understand the risks and accept they will lose money and gambling is really more for entertainment. However, in many cases when people are struggling, gambling seems like the only option for a windfall in cash (or any cash). Every time I've been in a line at a gas station behind people buying scratch cards it's clear that they need to win and that they shouldn't really be wasting money on them. The economic incentives are such that it takes advantage of people. Highly regulated or not, it creates a situation that those that can least afford it are most likely to lose money. Additionally, the externalities of a casino are likely to fall on taxpayers in one way or another. I'm glad to see Governor Hassan specifically mention that revenue from the casino will be set aside for substance and gambling addiction programs. With casinos further away their impacts haven't been seen much here, but I think there is reason for concern about the potential damages to families when the casino is a short drive away. People that don't have enough to get by shouldn't be put in a situation where their only option is gambling. The odds of winning or losing in a lottery are relatively easy to comprehend and have low costs of entry, but games in casinos are more likely to give the illusion that they are predictable and can be beat.<br /><br />I can't blame Governor Hassan for pursuing this suboptimal policy. The electorate has spoken and has given her few options to work with. This is a failure of democracy, not of our elected officials. I really hope the social costs to the state are minimal and that the revenue is stable and allows our state to make the critical investments to remain competitive and boost economic growth. However, I have real doubts that this is the likely outcome.<br /><br />The bottom line is that New Hampshire is one of the best places to live in the country and we should be willing to pay what it costs to not just keep it that way, but to improve the state. Taxes are treated as a black hole where money goes but we get nothing in return. The truth of the matter is that the state is great <em>because of</em> the taxes we pay, not despite them. To achieve economic growth and remain competitive, our focus should be on determining the most efficient and beneficial tax policies possible – instead of trying to find the easiest ways to shirk our obligation to ourselves and our future."},
            new Blog() {Title = "Outline of a Federal Consumption Tax", URLPath = "Federal-Consumption-Tax-Outline", DateAdded = new DateTime(2013, 4, 26, 20, 9, 57).ToUniversalTime(), Content = "<em>This post was originally titled \"A Plan For Tax Reform\" and was posted on April 22, 2012 to my campaign web site. It is posted here for future reference.</em><br /><br />The general definition of the efficiency of a tax is how hard it is to avoid. I view the income tax as inefficient in four ways:<br /><br />&emsp;1.&emsp;Inefficient in calculation<br />&emsp;2.&emsp;Inefficient in retrieval, easy to work around<br />&emsp;3.&emsp;Inefficient in aligning tax policy with national interests<br />&emsp;4.&emsp;Inefficient to reverse in order to stimulate consumption in a recession<br /><br />As a result of these inefficiencies, I think it is important at fundamentally changing how taxation works in this country. There has been the occasional talk of a consumption tax either in the former of a value-added tax (VAT) or a federal sales tax.<br /><br />I support getting rid of the federal income tax for most income brackets and replacing it with a federal sales tax – only if implemented correctly. A flat sales tax is regressive in that those with lower income would spend more of their income and, as a result, a higher percentage of their incomes in taxes. I would never support a sales tax that didn't correct this behavior. There have been discussions of a 23% flat sales tax (the so-called \"<a href=\"http://www.fairtax.org\" target=\"_blank\">fair tax</a>\"). I cannot emphasize how strongly I would oppose such a proposal.<br /><br />The correct implementation of a federal sales tax, as I will describe below, resolves all four of the aforementioned inefficiencies. The calculation is transparent to the consumer and there will be no need to file a tax return. An individual can't easily avoid paying a sales tax as it would require massive collusion from all the stores they shop at. A tax on consumption would encourage saving and fundamentally change the way the economy works for the better (more on this later). Lastly, in a recession tax cuts and refunds are created in the hopes that consumers will spend the extra cash. In many cases this is saved, which limits the economic impact, \"the multiplier effect\", of that spending. A cut in sales tax, however, would only be realized when money is spent which would provide more effective stimulus.<br /><br />I support a sales tax over a VAT as it is more transparent to the end consumer. Additionally, a sales tax would do more to correct the 4th inefficiency as it would be calculated at the time of the consumer transaction rather than the various steps along the supply chain. The latter would create a lag limiting the immediate impact of policy changes.<br /><br />The foundation of my implementation of a federal sales tax is a <a href=\"http://en.wikipedia.org/wiki/Web_service\" target=\"_blank\">web service</a> and corresponding <a href=\"http://en.wikipedia.org/wiki/Application_programming_interface\" target=\"_blank\">API</a>. At the point of purchase, when a product is scanned, several parameters will be sent to an IRS web server where based on those parameters the tax rate for the item will be calculated and returned. The parameters required for all products are product price and product category code. It would be flexible to accept additional parameters based on the systemic risk, externalities (e.g. environmental impact), and other miscellaneous economic incentives associated to a product. The application that would handle this logic would only take a few hundred lines of code, would return results in milliseconds, and would be easily maintainable to keep up with policy changes. It would not collect any information pertaining to the person purchasing the product and wouldn't need to track the store where it was purchased. That option could be available for stores to publish their transactions in real time. The IRS would keep track of the total amount due at tax time (whether monthly or annually) and would send a retailer the bill for the amount. If a retailer adopted this path, the only burden would be sending out a check (or a direct bank account withdrawal) at the required interval. This real-time data would also be tremendously valuable in tracking economic activity.<br /><br />The suppliers of the purchased product will be the party responsible for determining the parameters that need to be passed so scores of individual retailers aren't forced to do duplicate work for the same items. This is a small price for them to pay to avoid a VAT and dramatically reduces the effort to implement this system for retailers. This will also help small businesses by putting huge e-commerce web sites that are not subject to sales tax on a more level platform.<br /><br />Some sample examples of transactions (with arbitrary numbers):<br /><br />&emsp;-&emsp;Someone buys an article of clothing (product category) that is $20 (product price) since this product category would be considered \"core\", at this price there would be no sales tax<br />&emsp;-&emsp;Someone buys an article of clothing that is $500, since this would be in a \"luxury\" tax bracket they would have to pay a sales tax of 15%.<br />&emsp;-&emsp;Someone buys an article of clothing that is $20 manufactured in China in a coal power plant, this would be subject to a 5% sales tax based on the environmental impact of its production (The WTO would allow taxing imports based on environmental impact if we implemented a carbon tax or cap-and-trade system domestically).<br /><br />The progressivity of this sales tax would be guaranteed by several factors:<br /><br />&emsp;1.&emsp;Items defined as \"core\" would not be subject to a sales tax by default. These items would include clothing, groceries, and other essential items that if taxed would place a large burden on low and middle income families.<br />&emsp;2.&emsp;Items would be based on price bracket (whether defined in tiered, linear, exponential equations, etc.), more expensive items would be subject to more progressive taxation. This ensures that high-wealth individuals that buy luxury items will pay a larger share of taxes.<br />&emsp;3.&emsp;The income tax wouldn't be abolished entirely. Nominal tax rates would be dramatically lowered, and new tax brackets would be created (e.g. incomes over 1 million, 10 million, 100 million, 1 billion, etc.). These taxes would be enforced as necessary to guarantee a progressive tax code.<br />&emsp;4.&emsp;Most high-wealth individuals earn their income through capital gains which is taxed at a much lower rate. By taxing consumption, more of their economic activity will be subject to taxes. This could also allow for the reduction, or elimination, of the estate tax or other taxes resulting in a simpler tax code overall.<br /><br />To prevent a shock to the economy, this change wouldn't occur overnight. Over a period of five years, the income tax would be phased out and the sales tax would be phased in by twenty percent increments every year. This will allow consumers to adapt to paying a federal sales tax and realizing they get to keep more of their income. If it were done overnight, then people may be likely to pull back consumption more drastically. It also will provide the ability to track tax policy and ensure things are taxed at the appropriate levels prior to solely relying on the federal sales tax for revenue. This process should start one or two years after the legislation passed (depending on time of the year) to ensure retailers have time to implement the new systems. For retailers that use out-of-the-box point of sale systems, the software companies would likely be able to implement the necessary code in months and seamlessly integrate it into existing business processes.<br /><br />The application code would be open-source and the database would be available, so if a retailer didn't have internet access or didn't want to expose their internal systems to risk by connecting to the internet, they could integrate the application into their systems for offline access. When rates changed they'd only need to download a new database and distribute it on their computers. The same would go for any embedded application changes if a new version were released.<br /><br />Retailers that don't have computer-based systems would need to keep track of their inventory (which they should be doing already) and what products sold. Each product would be subject to the mean effective tax rate on the item over the fiscal year. This would prevent them from having to calculate the sales tax on an item in real time and would ease their burden considerably. Subsidies and rebates would be available for businesses switching over to digital point-of-sale systems and inventory management tools.<br /><br />While there may appear to be a lot of moving parts to this system, the impact to the end consumer would be minimal. It would align our tax policy with our priorities, would ensure a fair tax code, would be adaptable to change in seconds rather than months or years, and would allow for efficient tax collection. What's most important is that it would change this country from a consumption-based economy to an investment-based economy. The recent booms and busts of the economy have been the result of shocks to private consumption and overhanging debt. When in recession, people cut back which requires large efforts from the government to boost demand and restore economic activity to healthy levels. By taxing consumption, saving is encouraged which provides additional capital available for investment. This investment will allow for additional technological innovation and entrepreneurship which are the key sources for long-term, steady, and sustainable economic growth."},
            new Blog() {Title = "The Risk Posed By High-Capacity Magazines", URLPath = "The-Risk-Posed-By-High-Capacity-Magazines", DateAdded = new DateTime(2013, 5, 4, 18, 12, 0).ToUniversalTime(), Content = "A video making the rounds today is of a man opening fire on a police cruiser in the small town of Middlefield, Ohio on March 10th. The assailant was using an assault rifle (FEG 7.62x39, similar to an AK-47, which you can <a href=\"http://www.budsgunshop.com/catalog/product_info.php/products_id/411545173\" target=\"_blank\">buy online here for $456</a> including a 20-round magazine) and a high-capacity magazine. If you don't feel like watching the video: The police are overpowered and ultimately get off the most, and fatal, shots after the assailant had fired all, or most, of his bullets and was injured on the ground with his gun still trained on the officers.<br /><br /><div style=\"text-align:center;\"><iframe width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/PDlSrqCjhHQ\" frameborder=\"0\" allowfullscreen></iframe></div><br />Additional video leading up to the altercation is available <a href=\"http://www.news-herald.com/articles/2013/05/03/news/doc5183fccf74a53428767507.txt?viewmode=fullstory\" target=\"_blank\">here</a>. The man was pulled over for running a stop sign (which you can see is on the opposite side of \"Do Not Enter\" sign on the top left of the video before the cruiser does a u-turn). Fortunately after pulling the vehicle over, Officer Erin Thomas, in the passenger seat, can be heard saying \"He's hiding something…Oh my god.\" As she exits the car and walks around behind it, presumably for protection, the driver exits his car and immediately starts firing. She was able to hide behind the driver's side door where she and Officer Brandon Savage were able to return fire. With the high-capacity magazine effectively suppressing fire, the shooter can be seen almost nonchalantly circling around the police car in hopes to fire around the door to kill the officers before heading back towards his car.<br /><br />Officer Savage was injured by shrapnel and has since returned to duty. Officer Thomas took a bullet to her left hand leaving it \"<a href=\"http://www.ar15.com/forums/t_1_5/1453526_Officer_shot_in_Middlefield_Ohio_with_assault_rifle.html&page=2#i39096059\" target=\"_blank\">severely mangled</a>\" and causing the loss of her index finger. She was evacuated by helicopter for surgery and may require a second operation.<br /><br />In total, the shooter fired off 33 rounds. Officer Savage fired 29 rounds, likely having to reload his 9mm handgun. Officer Thomas fired 17 rounds, presumably emptying the magazine and unable to reload due to her hand injury - and which also was probably not necessary with the shooter being down and unable to fire. Of the officers' 46 shots, the shooter was hit 19 times with shots to the head and chest being the likely cause of death.<br /><br />It's worth noting that especially with smaller ammunition, such as 9mm bullets, those that are shot don't immediately die. Bullet wounds away from critical organs cause blood loss which lowers blood pressure until those shot pass out and perhaps die. Larger caliber bullets, such as from assault weapons, exacerbate this and, as a result, are more fatal with less accuracy and/or rounds fired. This is why the shooter, whose girth also helped, was able to continue firing despite visible hits to the abdomen.<br /><br /><div style=\"text-align:center;\"><img src=\"/images/20130405/cruiser.jpg\" alt=\"damaged police cruiser\" /></div>This image, via <a href=\"http://www.ar15.com/forums/t_1_5/1453526_Officer_shot_in_Middlefield_Ohio_with_assault_rifle.html&page=3#i40231506\" target=\"_blank\">ar15.com forums</a>, reportedly shows the cruiser after the event. Note the tight grouping of bullets head high on the driver's side of the windshield.<br /><br />In the shooter's car there were other items \"including multiple containers of gun powder, eight 40-round magazines, a black ski mask, black leather gloves and a .22 caliber rifle with a scope.\"<br /><br />Police chief Arnold Stanko said, \"What he was going to do with this? We don't have any idea. My officers were outgunned. We only had 9 millimeters and he had an AK-47.\"<br /><br />In other words, the shooter could have fired 360 bullets only reloading 8 times if he intended to use the weapon elsewhere instead of against armed police officers. There is no reason why a civilian should have access to 40 round magazines. The risk created by them having the potential to inflict mass casualties clearly outweighs one person's right to having that potential - the rights of the collective are superior to one's personal freedom.<br /><br />Those opposing legislation to ban high-capacity magazines (<a href=\" http://www.senate.gov/legislative/LIS/roll_call_lists/roll_call_vote_cfm.cfm?congress=113&session=1&vote=00103\" target=\"_blank\">aka 54 United States Senators</a>) are not only condoning these types of altercations where only luck and a little foresight prevents the murder of overpowered police officers, but also massacres of children in classrooms and theaters full of moviegoers. Doing nothing is irresponsible and reprehensible. Those 54 Senators who voted against the Lautenberg amendment have the blood of all future massacres on their hands. I can only hope they're aware of this - and if not, that an informed electorate will fire them from their jobs on the basis of gross incompetence.<br /><br />One final thought: while this is terrifying from the perspective of a dashboard camera behind an apparently bulletproof police cruiser windshield - this is the last thing 20 young children saw in Newtown. Can you imagine the terror they felt as they looked on at a shooter effortlessly firing round after round into their classroom? With their teachers throwing themselves in front of bullets but to no avail as the gunman didn't have to reload? If you put yourself in their shoes and still feel nothing needs to be done, then you are truly soulless and I pity you for your lack of compassion for these children, their families, and for humanity in general. More needs to be done, and it will be done."},
            new Blog() {Title = "Issues with HealthCare.gov Launch", URLPath = "health-care-exchange-launch-issues-obamacare", DateAdded = new DateTime(2013, 10, 5, 16, 10, 0).ToUniversalTime(), Content = "I was interviewed for a <a href=\"http://www.reuters.com/article/2013/10/05/us-usa-healthcare-technology-analysis-idUSBRE99407T20131005\" target=\"_blank\">Reuters article talking about issues impacting performance of HealthCare.gov</a>. The article includes two issues I encountered with the site. The origin of this is the security questions not loading on the sign-up form, which led to me noticing the vast number of resources being requested all at the root www.healthcare.gov domain name.<br /><br />The feedback from the article is about what I expected. People are saying 92 resources aren't that much, such as this tweet:<br /><blockquote class=\"twitter-tweet\"><p><a href=\"https://twitter.com/AnnieLowrey\">@AnnieLowrey</a> experts in that story are wrong. 92 requests isn&#39;t that many. Reuters&#39; own site makes 329 cc <a href=\"https://twitter.com/sxbegle\">@sxbegle</a></p>&mdash; Andrei Scheinkman (@ascheink) <a href=\"https://twitter.com/ascheink/statuses/386550040501563393\">October 5, 2013</a></blockquote><br />Doing a request to reuters.com I saw 128 requests, but more importantly only 24 were going to the http://www.reuters.com main domain. The 92 requests I mentioned were all going to http://www.healthcare.gov meaning every request was being directed to the same servers or load balancers. And yes, this is entirely manageable. However, in the context of Development Seed's focus on the number of servers being used in <a href=\"http://www.theatlantic.com/technology/archive/2013/06/healthcaregov-code-developed-by-the-people-and-for-the-people-released-back-to-the-people/277295/\" target=\"_blank\">this great piece by Alex Howard</a> is what causes my concern. They discuss walking into an expectation of 32 servers and they were able to get that number down to 2. Obviously for the full launch they would increase that number, but too few servers and too many simultaneous requests will definitely cause issues. The site stayed up, and returning CSS or Javascript files only takes a millisecond or two (if done correctly) from the server's perspective, but each request, assuming no asynchrony was added, locks up a thread and eventually peaks a server's capacity to handle new requests. Based on how the communication works with the backend system (discussed next), there is potential for socket connection issues on the client side and the server side when communicating to the backend system via web services. There is also talk of using Akamai for CDN so it is unclear if healthcare.gov points to the CDN, or if certain paths are routed to the CDN as a sort of wrapper. Seeing as the backend system is reached via the intranet, it would be interesting to see the specific network structure and how the CDN is integrated.<br /><br />The main point to this is that best practices weren't followed. Some CSS and Javascript files weren't minified. The files certainly weren't bundled to be included in a single response. The code was let out the door with 56 separate Javascript requests to the same domain instead of a dedicated domain for resources. The 56 Javascript files should have been combined into 1 minified file and returned on a CDN with a separate domain name. If there was a laser-like focus on scalability and minimizing necessary capacity, that should have been the end result. This isn't a root cause issue for the site being brought down, it added undue strain and calls into question the code review process taken before moving the site into production.<br /><br />The second issue, and I think the more important one in terms of bringing the site down, is how the backend system was accessed. I looked at requests using the Console in Firefox to determine why security questions weren't loading. I noticed an Internal Server Error (error code: 500) being returned for the URL: <a href=\"https://www.healthcare.gov/ee-rest/ffe/en_US/MyAccountEIDMUnsecuredIntegration/fetchAllSecurityQuestions/ffm\" target=\"_blank\">https://www.healthcare.gov/ee-rest/ffe/en_US/MyAccountEIDMUnsecuredIntegration/fetchAllSecurityQuestions/ffm</a>. It seemed 50/50 in terms of returning an actual response. It returns JSON that contains the security questions. Why this is returned in a separate request and pieced together on the client side I don't know. When the error occurs during a request, the full stacktrace is returned to the client within the JSON. This is another ignored best practice as it gives information on how the code works to unauthorized users and can potentially cause issues.<br /><br /><code class=\"ib\">javax.xml.ws.WebServiceException: Could not send Message.<br />at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:145)<br />at $Proxy3761.viewChallengeQuestions(Unknown Source)<br />at gov.hhs.cms.eidm.ws.client.eidmsystem.api.challengeqstns.ChallengeQuestions_ChallengeQuestionsService_Client.viewChallengeQuestions<br />(ChallengeQuestions_ChallengeQuestionsService_Client.java:60)<br />at gov.hhs.cms.eidm.ws.client.eidmsystem.api.challengeqstns.ChallengeQuestions_ChallengeQuestionsService_Client.viewChallengeQuestions<br />(ChallengeQuestions_ChallengeQuestionsService_Client.java:88)<br />at gov.hhs.cms.eidm.ws.proxy.service.impl.BaseEidmProxyServiceImpl.fetchSecurityQuestions(BaseEidmProxyServiceImpl.java:180)<br />at sun.reflect.GeneratedMethodAccessor708.invoke(Unknown Source)<br />at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)<br />at java.lang.reflect.Method.invoke(Method.java:597)<br />at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:173)<br />at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:89)<br />at org.apache.cxf.jaxws.JAXWSMethodInvoker.invoke(JAXWSMethodInvoker.java:61)<br />at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:75)<br />at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)<br />at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)<br />at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)<br />at java.util.concurrent.FutureTask.run(FutureTask.java:138)<br />at org.apache.cxf.workqueue.SynchronousExecutor.execute(SynchronousExecutor.java:37)<br />at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:106)<br />at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)<br />at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:123)<br />at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:207)<br />at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:213)<br />at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:193)<br />at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:126)<br />at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:185)<br />at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:108)<br />at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)<br />at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:164)<br />at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)<br />at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)<br />at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)<br />at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)<br />at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)<br />at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:235) <br />at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191) <br />at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:183) <br />at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:95) <br />at org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.process(SecurityContextEstablishmentValve.java:126) <br />at org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.invoke(SecurityContextEstablishmentValve.java:70) <br />at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127) <br />at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) <br />at org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:158) <br />at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) <br />at org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.internalProcess(ActiveRequestResponseCacheValve.java:74) <br />at org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.invoke(ActiveRequestResponseCacheValve.java:47) <br />at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:330) <br />at org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:436) <br />at org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler.process(AjpProtocol.java:385) <br />at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:451)<br />at java.lang.Thread.run(Thread.java:662)<br />Caused by: java.net.SocketException: SocketException invoking http://10.153.199.69:8663/ChallengeQuestionsService*: Connection reset<br />at sun.reflect.GeneratedConstructorAccessor4142.newInstance(Unknown Source)<br />at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)<br />at java.lang.reflect.Constructor.newInstance(Constructor.java:513)<br />at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.mapException(HTTPConduit.java:1431)<br />at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1416)<br />at org.apache.cxf.transport.AbstractConduit.close(AbstractConduit.java:56)<br />at org.apache.cxf.transport.http.HTTPConduit.close(HTTPConduit.java:649)<br />at org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor.handleMessage(MessageSenderInterceptor.java:62)<br />at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:263)<br />at org.apache.cxf.endpoint.ClientImpl.doInvoke(ClientImpl.java:533)<br />at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:463)<br />at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:366)<br />at org.apache.cxf.endpoint.ClientImpl.invoke(ClientImpl.java:319)<br />at org.apache.cxf.frontend.ClientProxy.invokeSync(ClientProxy.java:88)<br />at org.apache.cxf.jaxws.JaxWsClientProxy.invoke(JaxWsClientProxy.java:134)<br />... 49 more<br />Caused by: java.net.SocketException: Connection reset<br />at java.net.SocketInputStream.read(SocketInputStream.java:168)<br />at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)<br />at java.io.BufferedInputStream.read1(BufferedInputStream.java:258)<br />at java.io.BufferedInputStream.read(BufferedInputStream.java:317)<br />at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:695)<br />at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:640)<br />at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1195)<br />at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:379)<br />at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponseInternal(HTTPConduit.java:1542)<br />at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.handleResponse(HTTPConduit.java:1494)<br />at org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream.close(HTTPConduit.java:1402)<br />... 59 more<br /></code><br /><br />It shows a client side resource containing JSON being populated by a web service located on the intranet (Note the <code>Caused by: java.net.SocketException: SocketException invoking http://10.153.199.69:8663/ChallengeQuestionsService</code>) showing an IP address that is reserved for internal network usage and that the server at that address (or servers behind a load balancer) were overwhelmed causing the frontend to stop working.<br /><br />My expectation is that these security questions aren't going to change much, if at all, so there is no reason for this web service to be called frequently. Seeing as this failed regularly and I wasn't the only one using the site, obviously these results weren't being cached. There was one resource loaded in a similar way at <a href=\"https://www.healthcare.gov/ee-rest/ffe/en_US/MyAccountEIDMUnsecuredIntegration/fetchEIDMValidations/ffm\" target=\"_blank\"> https://www.healthcare.gov/ee-rest/ffe/en_US/MyAccountEIDMUnsecuredIntegration/fetchEIDMValidations/ffm</a> which just loads regular expressions. Again, why this needs to be loaded in this way is unclear. Since the create account form is the only part people seemed to be able to get through and that these were the only requests that might have been called the backend system (from what I can see as a frontend user). It seems crazy that this could bring the entire system down, but it might just be the case. With basic caching this would have been avoidable. Without caching, this application should have never been let out the door.<br /><br />Finally, the overall architecture is confusing. When I think of backend systems, I think of batch processes or specific functions being run behind the scenes that aren't integral or synchronous with the frontend system. Submitting a form which posts to a server which then in turn posts to another server, waits for a response from that server, and returns a response from the previous response is an unnecessarily abstracted way for a high-performance application to run. It might not run that way, but that's how it looks based on the stacktrace I received and from the existing discussion of segregated frontend and backend systems.<br /><br />All in all, the web site's failed launch is unfortunate. As a Democrat I am disappointed in anything that makes it unnecessarily difficult for people to get access to health care. The errors that I've seen, and the many others that I haven't, disappoint me as a developer interested in well-designed code. Of the millions of users to the site, there are undoubtedly some who took time out of their day to go to the library or somewhere with internet access which they can't afford on their own, only to be unable to get through the site. I also have concern for those, <a href=\"https://twitter.com/digiphile/status/386191632233553920\" target=\"_blank\">as Alex Howard tweeted</a>, that with a proper launch would \"have hours of their days back & wouldn't have lost trust in government to provide services online.\" <br /><br />Conservative media is having a field day with the \"Obamacare glitches\" that have nothing to do with Obamacare or the government. These are private contractors that were unable to deliver. The main blame goes to CGI which is implementing many state-level exchanges and <a href=\"http://vtdigger.org/2013/09/27/builder-states-health-care-exchange-misses-key-deadliness/\" target=\"_blank\">has had issues with being behind schedule and over budget</a>. Sharon Begley, who wrote the Reuters article, told me CGI was unavailable for comment. The article's scope seemed to be scaled back from our initial discussion, so it's unfortunate more analysis into the players responsible for the site's failed launch isn't immediately available. I, and others, can only do so much analysis of the code from a web browser when most of the site's functionality is unavailable. So people can critique my analysis, although I'd disagree with it being \"wrong.\" <br /><br />As I tweeted last week:<blockquote class=\"twitter-tweet\"><p>If GOP shuts down government on day exchanges launch, they will receive full blame for any issues in Obamacare implementation. <a href=\"https://twitter.com/search?q=%23strategery&amp;src=hash\">#strategery</a></p>&mdash; Matthew Hancock (@matthewhancock) <a href=\"https://twitter.com/matthewhancock/statuses/383993112885882882\">September 28, 2013</a></blockquote><br />In the absence of the shutdown, all of the focus would be on the site's errors so the GOP did Obamacare a huge favor. Despite the shutdown, at least some programmers are deemed critical enough to work on debugging the site. I hope when it re-launches after the weekend that the site is able to provide what the people of America deserve: easy access to affordable health care.<br /><br />Ultimately, this should never have been contracted out. Those working in the IT department at DHHS would have skin in the game and would be better able to deliver. The downward pressure on government employees makes the government less effective, but that might be the point.<br /><blockquote class=\"twitter-tweet\"><p>Lesson of <a href=\"http://t.co/6vM9QhIBnn\">http://t.co/6vM9QhIBnn</a> is never contract out work when it&#39;s the most important web site your department has ever launched.</p>&mdash; Matthew Hancock (@matthewhancock) <a href=\"https://twitter.com/matthewhancock/statuses/386304925912686593\">October 5, 2013</a></blockquote>"},
            new Blog() {Title = "Obamacare and What It Means to \"Keep Your Plan\"", URLPath = "obamacare-like-your-plan-keep-your-plan", DateAdded = new DateTime(2013, 11, 6, 20, 56, 0).ToUniversalTime(), Content = "In the early days of the debate about health care reform – or more accurately health insurance reform – and the months of hysteria that followed its passage there was one underlying question: what the hell does this whole thing mean? In the messaging wars that the Obama administration was losing and the mainstream media wasn’t helping by focusing on and boosting the tea party, there was this overwhelming pressure to cut through the noise with simple and precise statements. The one now getting attention is the \"if you like your plan, you get to keep your plan\" line. This was meant to reassure people, and it probably did. Now with <a href=\"http://talkingpointsmemo.com/dc/what-happens-to-people-whose-insurance-is-cancelled-because-of-obamacare\" target=\"_blank\">insurance companies issuing cancelation notices to a small segment of an already small percentage of people that buy health insurance on the individual market</a>, the statement is being treated as a complete falsehood. Of course scandal mongering being good for ratings and clicks, the media is piling on without adequate vetting and commentary. <a href=\"http://www.salon.com/2013/10/30/rate_shock_the_gops_shameful_new_obamacare_lie/\" target=\"_blank\">Telling stories of people \"losing\" their insurance or paying more for it</a>. <a href=\"http://www.latimes.com/business/hiltzik/la-fi-mh-debunked-20131030,0,6010994.story\" target=\"_blank\">They ignore subsidies, or that the existing policies were health insurance in name only</a>. <a href=\"http://www.salon.com/2013/11/05/how_the_medias_blowing_the_obamacare_rollout/\" target=\"_blank\">Of course the myth debunking never gets the same attention</a>.<br /><br />First, let’s start with what the statement meant. A reasonable interpretation of \"if you like your plan…\" is that there is no aspect of Obamacare that forces you, the individual purchaser, to change your plan. The government isn't stepping between you and your insurer and rationing your care. That is true. A consumer doesn’t have to change their plan. Where it gets wonky is in how health insurance companies choose to implement their compliance with the law. The health care law, Obamacare, requires 10 essential benefits to be included in all health policies: no pre-existing conditions, no annual or lifetime caps, and other requirements to protect consumers. What insurance companies could have done is sent adjustments (as they do every year anyway) detailing increases in premiums and just bundling the new required benefits in with the existing policies. This is likely what they’re doing in some cases. With people that have catastrophic policies where they have super-high deductibles and co-pays and super-low premiums this would be a shock to consumers saying \"here’s your new policy details, and your premium has increased ten-fold.\" Sending them a letter saying \"your policy is not being renewed, we need to start over with a new policy next year\" is allowing customers to opt-in to a new policy versus having to opt-out of a vastly different policy that would automatically take effect without action. I think in some cases this should be preferred. Health insurance companies are more than happy to do this: it gives them a scapegoat from the changes by blaming Obamacare and <a href=\"http://talkingpointsmemo.com/dc/insurance-companies-misleading-letters-obamacare\" target=\"_blank\">it gives them the opportunity to price gouge consumers while they aren’t aware of the health insurance exchange</a>. Saying \"your policy ends in 4 months, here’s what you can do now\" while people are unfamiliar with their other options is a good way to make money. Of course it’s unethical, but what do you expect from an industry that up until Obamacare’s passage made every effort to deny paying their customers’ medical bills when the insurance was actually needed? Remember that? It can’t happen now because of Obamacare. How soon we forget how dire the health insurance system was and how much good Obamacare does.<br /><br />So to tie it all together. There are people that will pay more for health insurance. With reform to any complex system there will be \"losers.\" <a href=\"http://www.washingtonpost.com/blogs/wonkblog/wp/2013/10/29/the-health-care-trilemma-how-obamacare-is-changing-insurance-premiums/\" target=\"_blank\">The vast majority of people will benefit, however</a>. The whole purpose of Obamacare is a series of market-based reforms to efficiently allocate the costs of health care across the population and guarantee access to everyone. This system will function better as a whole than the previous one. If you paid less under the old system, I’m sorry you’ll pay more now but you were benefiting from a broken system. You aren’t paying too much now, you weren’t paying enough before.<br /><br />There were over 700,000 bankruptcies a year as a result of medical expenses – a majority of those people having health insurance. Those bills are paid for by taxpayers in the form of higher medical costs, higher health insurance premiums, or taxes to cover the costs of local hospitals. Estimates range between 20,000-45,000 people died every year because of a lack of access to health care. People deferring needed care until they could get it for free in the emergency room, because they otherwise couldn’t afford it, and by that point being too far gone. The long-term costs of the Iraq War are estimated to exceed three trillion dollars and were related tangentially to one attack on this country that resulted in the death of 3,000 people. Imagine ten September 11ths a year in perpetuity. If paying a few hundred dollars more a year – or per month – is the price it takes to save hundreds of thousands of lives, so be it. The generous subsidies included in the Obamacare exchanges ensures that any additional costs will be allocated progressively so higher premiums will only impact those most likely able to afford them.<br /><br />If you want to save money, advocate for a single-payer health care system. It will immediately cut your premiums by 25-30% without the overhead and profit taking of private health insurers. Medicare has overhead of 4-5% percent and that would decline as the entire population was covered: economies of scale. Additionally, hospitals would have less staff dedicated to fighting health insurance companies to pay bills and negotiating the prices of treatments. The lowered overhead of hospitals from a single-payer system I haven’t yet seen quantified but would probably only be a few percentage points – which is still important when dealing in the trillions of dollars.<br /><br />Overall, the \"if you like your plan…\" line will hold true for about 97% of people and creates a gray area for the other 3% which already experience high churn in choosing their health insurance policies on a year to year basis. Did the end outcome reflect the statement 100% exactly? No. Is it close enough to the reality that it doesn’t deserve the scandal status it’s received? I think so. These issues are compounded by the failed launch of the healthcare.gov web site, <a href=\"http://matthewhancock.com/health-care-exchange-launch-issues-obamacare\" target=\"_blank\">which I’ve previously written about</a>. By this time next year the stories of people getting hit hard by Obamacare will be few and far between (they already are). The overwhelming consensus will be that Obamacare has worked and is working. I look forward to moving past these growing pains and the understandable confusion and anger they cause."}
            };

        public class Blog
        {
            public string Title { get; set; }
            public string Content { get; set; }
            public string Author { get; set; }
            public string AuthorUserID { get; set; }
            public string PostID { get; set; }
            public string RoleTitle { get; set; }
            public DateTime DateAdded { get; set; }
            public DateTime DateEdited { get; set; }
            public string URLPath { get; set; }

            public Blog() { }
        }
    }
}